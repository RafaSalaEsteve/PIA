{"config":{"lang":["es"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Bienvenidos al Curso de Especializaci\u00f3n en Big Data e Inteligencia Artificial","text":"<p>En esta p\u00e1gina encontrar\u00e1s los materiales estructurados por bloques tem\u00e1ticos.</p> <ul> <li>Gu\u00eda general</li> <li>Unitat 1. Introducci\u00f3 a la Programaci\u00f3</li> </ul>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/exercicis/","title":"2. Exercici pr\u00e0ctic","text":""},{"location":"Unitat_1.Introduccio_a_la_Programacio/exercicis/#1-proves-de-rendiment","title":"1. Proves de rendiment","text":"<p>En aquesta pr\u00e0ctica anem a fer una prova de rendiment de 3 llenguatges de programaci\u00f3: C, Python i Python amb numpy.</p> <p>Els programes fan la multiplicaci\u00f3 de dues matrius de 2048x2048 elements, amb un total de 8.589.934.592 operacions.</p> <p>Per a la realitzaci\u00f3 del exercici necessitar\u00e0s:</p> <ul> <li>Tenir instal\u00b7lat el compilador de C (per defecte a Ubuntu)</li> <li>Tenir instal\u00b7lat un JDK</li> <li>Tenir instal\u00b7lat Python i la llibreria <code>numpy</code></li> </ul> Codi en C matrix.c<pre><code>#include &lt;stdlib.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;time.h&gt;\n\n#define n 2048\n\ndouble A[n][n];\ndouble B[n][n];\ndouble C[n][n];\n\nint main() {\n\n    //populate the matrices with random values between 0.0 and 1.0\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n; j++) {\n\n            A[i][j] = (double) rand() / (double) RAND_MAX;\n            B[i][j] = (double) rand() / (double) RAND_MAX;\n            C[i][j] = 0;\n        }\n    }\n\n    struct timespec start, end;\n    double time_spent;\n\n    //matrix multiplication\n    clock_gettime(CLOCK_REALTIME, &amp;start);\n    for (int i = 0; i &lt; n; i++) {\n        for (int j = 0; j &lt; n; j++) {\n            for (int k = 0; k &lt; n; k++) {\n                C[i][j] += A[i][k] * B[k][j];\n            }\n        }\n    }\n    clock_gettime(CLOCK_REALTIME, &amp;end);\n    time_spent = (end.tv_sec - start.tv_sec) + (end.tv_nsec - start.tv_nsec) / 1000000000.0;\n    printf(\"Elapsed time in seconds: %f \\n\", time_spent);\n    return 0;\n}\n</code></pre> Codi en Python matrix.py<pre><code>import random\nimport time\n\nn = 2048\n\n#populate the matrices with random values between 0.0 and 1.0\nA = [[random.random() for row in range(n)] for col in range(n)]\nB = [[random.random() for row in range(n)] for col in range(n)]\nC = [[0 for row in range(n)] for col in range(n)]\n\nstart = time.time()\n#matrix multiplication\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            C[i][j] += A[i][k] * B[k][j]\n\nend = time.time()\nprint(\"Elapsed time in seconds %0.6f\" % (end-start))\n</code></pre> Codi en Java Matrix.java<pre><code>import random\nimport time\n\nn = 2048\n\n#populate the matrices with random values between 0.0 and 1.0\nA = [[random.random() for row in range(n)] for col in range(n)]\nB = [[random.random() for row in range(n)] for col in range(n)]\nC = [[0 for row in range(n)] for col in range(n)]\n\nstart = time.time()\n#matrix multiplication\nfor i in range(n):\n    for j in range(n):\n        for k in range(n):\n            C[i][j] += A[i][k] * B[k][j]\n\nend = time.time()\nprint(\"Elapsed time in seconds %0.6f\" % (end-start))\n</code></pre>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/exercicis/#2-compilacio-i-llancament-dels-programes","title":"2. Compilaci\u00f3 i llan\u00e7ament dels programes","text":"<ol> <li>Compilar cada programa (si cal).</li> <li>Executar 5 vegades cada programa.</li> <li>Anotar els temps en un full de c\u00e0lcul.</li> </ol>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/exercicis/#ordres-basiques","title":"Ordres b\u00e0siques:","text":"Compilaci\u00f3 i execuci\u00f3 dels programes Bash<pre><code>#C\ngcc MatrixMultiplication.c -o matrix\n./matrix\n#Java\njavac MatrixMultiplication.java\njava MatrixMultiplication\n#Python\npython MatrixMultiplication.py\n</code></pre> <p>Anota els resultats i compara'ls. Torna a compilar els programes C de la seg\u00fcent forma:</p> Compilaci\u00f3 optimitzada en C bash<pre><code>gcc -O2 MatrixMultiplication.c -o matrixO2\n./matrix02\ngcc -O3 MatrixMultiplication.c -o matrixO2\n./matrix03\n</code></pre>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/exercicis/#3-llibreria-dalt-rendiment-numpy","title":"3. Llibreria d'alt rendiment: <code>numpy</code>","text":"<p>Torna a fer la prova amb el seg\u00fcent programa:</p> Python amb numpy matrixnp.py<pre><code>import numpy as np\nimport time\n\n\nTAM=2048\n\n#matriu = [[np.random.rand() for j in range(TAM)] for i in range(TAM)]\n\nm1 = np.random.rand(TAM,TAM)\nm2 = np.random.rand(TAM,TAM)\ndesti = np.zeros((TAM,TAM),dtype=float)\n\nstart = time.time()\nnova=np.dot(m1,m2)\nend = time.time()\nprint(\"Amb np: Elapsed time in seconds %0.6f\" % (end-start))\n\n\nstart = time.time()\n#matrix multiplication\nfor i in range(TAM):\n    for j in range(TAM):\n        for k in range(TAM):\n            desti[i][j] += m1[i][k] * m2[k][j]\nend = time.time()\nprint(\"Sense np: Elapsed time in seconds %0.6f\" % (end-start))\n</code></pre>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/","title":"1. Algorismes i llenguatges","text":"<p>Per a comen\u00e7ar amb aquest curs, cal repassar algunes consideracions molt b\u00e0siques (i molt r\u00e0pidament) de conceptes que tenim que tindre molt clars.</p>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#11-programa-i-programacio","title":"1.1 Programa i programaci\u00f3","text":"<p>Definicions b\u00e0siques</p> <ul> <li>El client \u00e9s qui diu les seues necessitats.</li> <li>Un analista especifica qu\u00e8 ha de fer el programa.</li> <li>Un dissenyador perfila l'algorisme.</li> <li>Un programador/a codifica els programes.</li> <li>Usuari/a \u00e9s qui fa servir l\u2019aplicaci\u00f3 inform\u00e0tica.</li> </ul> <p>M\u00e9s definicions</p> <ul> <li>Un algorisme \u00e9s un m\u00e8tode de resoluci\u00f3 d\u2019un problema.</li> <li>Un programa \u00e9s l\u2019expressi\u00f3 d\u2019un algorisme en un llenguatge.</li> <li>La programaci\u00f3 \u00e9s la seq\u00fc\u00e8ncia de passos per obtenir un programa.</li> <li>Una aplicaci\u00f3 inform\u00e0tica \u00e9s un conjunt de programes.</li> <li>Els programes manipulen dades d'entrada per produir sortida.</li> </ul> <p></p> <p>Infografia sobre algoritmes</p>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#12-algorisme-vs-programa","title":"1.2 Algorisme vs Programa","text":""},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#121-llenguatge-compilat","title":"1.2.1 Llenguatge compilat","text":"<p>Els grans exemples s\u00f3n C i C++. No s\u00f3n portables.</p>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#122-llenguatge-interpretat","title":"1.2.2 Llenguatge interpretat","text":"<p>El representant principal \u00e9s Python.</p> <p></p> <p>S\u00f3n molt portables, necessiten int\u00e8rpret.</p>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#123-llenguatges-mixtes","title":"1.2.3 Llenguatges mixtes","text":"<p>Exemple: Java</p> <p></p> <p></p>"},{"location":"Unitat_1.Introduccio_a_la_Programacio/teoria1_algorismes_i_llenguatges/#13-llenguatges-segons-el-seu-us","title":"1.3 Llenguatges segons el seu \u00fas","text":"<ul> <li><code>C</code>: sistemes operatius, microcontroladors.</li> <li><code>Java</code>: aplicacions generals, bases de dades, Android.</li> <li><code>Python</code>: prop\u00f2sit general, IA, Big Data.</li> <li><code>node/javascript</code>: servidors, web.</li> <li><code>php</code>: servidors.</li> <li><code>R</code>: an\u00e0lisi de dades.</li> <li><code>Kotlin</code>: desenvolupament Android.</li> </ul>"}]}